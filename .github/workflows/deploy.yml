name: CI/CD con Docker Compose y Docker Scout

on:
  push:
    branches:
      - main

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Instalar Docker última versión disponible
        run: |
          sudo apt-get update
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Instalar Docker Scout CLI v1.18.2
        run: |
          curl -L https://github.com/docker/scout-cli/releases/download/v1.18.2/docker-scout_1.18.2_linux_amd64.tar.gz -o docker-scout.tar.gz
          tar -xzf docker-scout.tar.gz
          sudo mv docker-scout /usr/local/bin/
          docker-scout --version

      - name: Login en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir imagen Docker
        run: |
          docker build -t mjtaehyung/proyecto:latest .

      - name: Push imagen a Docker Hub
        run: |
          docker push mjtaehyung/proyecto:latest

      - name: Escanear imagen con Docker Scout CLI
        run: |
          docker-scout quickview mjtaehyung/proyecto:latest

      - name: Cargar variables de entorno
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "GMAIL_USER=${{ secrets.GMAIL_USER }}" >> .env
          echo "PORT=5000" >> .env

      - name: Instalar Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Desplegar con Docker Compose
        run: |
          docker-compose --env-file .env up -d
